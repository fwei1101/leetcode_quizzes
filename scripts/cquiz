#!/bin/bash

if [[ -z "$PROJECT_ROOT" || -z "$MAKEFILE_DIR" ]]; then
	echo "Error: Please run 'setup_workspace.sh' first."
	exit 1
fi

usage() {
	script_name=$(basename "$0")
	echo "Usage: $script_name [-c|--category CATEGORY] [-n|--name QUIZ]"
	echo "Example: $script_name -c array -n array_quiz"
	exit 1
}

while [[ $# -gt 0 ]]; do
	case "$1" in
		-c|--category)
			CATEGORY="$2"
			shift 2
			;;
		-n|--name)
			QUIZ="$2"
			shift 2
			;;
		*)
			usage
			;;
	esac
done

if [[ -z "$CATEGORY" || -z "$QUIZ" ]]; then
	usage
fi

CATEGORY_DIR="$PROJECT_ROOT/categories/$CATEGORY"
QUIZ_DIR="$CATEGORY_DIR/$QUIZ"

mkdir -p "$QUIZ_DIR/src" "$QUIZ_DIR/test"

cat > "$QUIZ_DIR/src/main.cpp" << 'EOF'
#include "solution.hpp"
#include "parser.hpp"
#include <iostream>
#include <yaml-cpp/yaml.h>

int main()
{
	YAML::Node tcs = YAML::LoadFile("./test/tcs.yaml");

	Solution sol;

	for (auto const & tc : tcs["tcs"])
	{
		auto arg1 = tc["input"]["arg1"].as<ARG1>();
		auto arg2 = tc["input"]["arg2"].as<ARG2>();
		auto expect = tc["expect"].as<EXPECT>();

		auto res = sol(arg1, arg2);

		if (res != expect)
		{
			std::cout
				<< "{FAILED}:"
					<< "[input:" << "arg1=" << arg1 << ",arg2=" << arg2 << "],"
					<< "[expect:" << expect << "],"
					<< "[got:" << res << "]"
				<< std::endl;
		}
	}

	std::cout << "==== All Test Cases Completed ====" << std::endl;
	return 0;
}
EOF

cat > "$QUIZ_DIR/test/tcs.yaml" << 'EOF'
problem: ""
url: ""
tcs:
  - input:
    expect: "bacdfeg"
EOF

cat > "$QUIZ_DIR/Makefile" << 'EOF'
ifndef MAKEFILE_DIR
$(error MAKEFILE_DIR is not set. Please run the script "setup_workspace.sh" to set it.)
endif

include ${MAKEFILE_DIR}/Makefile
EOF

touch "$QUIZ_DIR/src/solution.hpp"

echo "Quiz directory created at: $QUIZ_DIR"